{"version":3,"file":"static/js/523.03371c0d.chunk.js","mappings":"wLACA,EAAyB,0BAAzB,EAA6D,2BAA7D,EAAgG,yBC+BhG,EA9BiB,SAACA,GAChB,OAAwCC,EAAAA,EAAAA,UAAS,IAAG,eAA7CC,EAAY,KAAEC,EAAe,KACpC,GAAkCF,EAAAA,EAAAA,WAAS,GAAM,eAA1CG,EAAS,KAAEC,EAAY,KAExBC,EAAeN,EAAcE,GAgBnC,MAAO,CACLK,MAAOL,EACPM,QAASF,EACTG,UAlBgBH,GAAgBF,EAmBhCM,mBAjByB,SAACC,GAC1BR,EAAgBQ,EAAMC,OAAOL,MAC/B,EAgBEM,iBAduB,WACvBR,GAAa,EACf,EAaES,MAXY,WACZX,EAAgB,IAChBE,GAAa,EACf,EAUF,E,SCsGA,EA9HmB,WACjB,OAAsBJ,EAAAA,EAAAA,WAAS,GAAM,eAA9Bc,EAAG,KAAEC,EAAM,KACZC,GAAUC,EAAAA,EAAAA,MAKhB,EAOIC,GAAS,SAACZ,GAAK,MAAsB,KAAjBA,EAAMa,MAAa,IANlCC,EAAY,EAAnBd,MACSe,EAAmB,EAA5Bd,QACUe,EAAkB,EAA5Bd,SACoBe,EAAmB,EAAvCd,mBACkBe,EAAgB,EAAlCZ,iBACOa,EAAe,EAAtBZ,MAGF,EAOIK,GAAS,SAACZ,GAAK,MAAsB,KAAjBA,EAAMa,MAAa,IANlCO,EAAe,EAAtBpB,MACSqB,EAAsB,EAA/BpB,QACUqB,EAAqB,EAA/BpB,SACoBqB,EAAsB,EAA1CpB,mBACkBqB,EAAmB,EAArClB,iBACOmB,EAAkB,EAAzBlB,MAGEmB,GAAc,EAEdX,GAAuBM,IACzBK,GAAc,GAGhB,IAYIC,EAZEC,EAAS,WACbnB,GAAO,GACPgB,GACF,EAWEE,EADEE,aAAaC,QAAQ,WACdC,KAAKC,MAAMH,aAAaC,QAAQ,YAEhC,KAIX,IAAIG,EAAO,KA8BLC,EAAoBlB,EAAqBmB,EAAkB,GAC3DC,EAAuBd,EAAwBa,EAAkB,GAEvE,OACE,iBAAME,SAhCkB,SAACjC,GAGzB,GAFAA,EAAMkC,iBAEDvB,EAAL,CAgBA,GAZIY,EAAOY,OAAS,IAClBN,EAAON,EAAOa,QACZ,SAACC,GAAC,OAAKA,EAAEC,QAAU5B,GAAgB2B,EAAEE,WAAavB,CAAe,KAIjEa,EAAKM,OAAS,EAChBV,aAAae,QAAQ,SAAUb,KAAKc,UAAUZ,IAE9CL,KAGGZ,IAAuBA,GAAsC,IAAhBiB,EAAKM,OACrD,OAAOX,IApCTnB,GAAO,GACPU,IACAM,IAlCgB,SAACrB,GAAUM,EAAQoC,KAAK,aAAD,OAAc1C,GAAS,CAyE9D2C,CAAUd,EAAK,GAAGe,GApBlB,CAqBF,EAMoC,UAChC,iBAAKC,UAAWd,EAAe,WAC7B,oCACC3B,IACC,cAAGyC,UAAWd,EAAc,8EAE9B,4BACE,kBACEe,YAAY,YACZC,KAAK,OACLC,SAAUnC,EACVoC,OAAQnC,EACRlB,MAAOc,EACPmC,UAAWf,IAEZlB,IACC,cAAGiC,UAAWd,EAAc,2DAGhC,4BACE,kBACEe,YAAY,eACZC,KAAK,WACLC,SAAU7B,EACV8B,OAAQ7B,EACRxB,MAAOoB,EACP6B,UAAWb,IAEZd,IACC,cAAG2B,UAAWd,EAAc,wEAGhC,mBAAQmB,UAAW5B,EAAY,sBAC/B,iDACqB,iBAAM6B,QAnHhB,WAAH,OAAS7C,EAAQoC,KAAK,gBAAiB,EAmHF,4BAKrD,ECjIA,EAAyB,2BAAzB,EAA8D,4BAA9D,EAAkG,0BCkMlG,EA7LmB,WACjB,IAwDInB,EAxDJ,GAA0BjC,EAAAA,EAAAA,WAAS,GAAM,eAAlC8D,EAAK,KAAEC,EAAQ,KAChB/C,GAAUC,EAAAA,EAAAA,MAEV+C,EAAe,WAAH,OAAShD,EAAQoC,KAAK,gBAAiB,EACzD,EAOIlC,GAAS,SAACZ,GAAK,MAAsB,KAAjBA,EAAMa,MAAa,IANlC8C,EAAW,EAAlB3D,MACS4D,EAAkB,EAA3B3D,QACU4D,EAAiB,EAA3B3D,SACoB4D,EAAkB,EAAtC3D,mBACkB4D,EAAe,EAAjCzD,iBACO0D,EAAc,EAArBzD,MAGF,EAOIK,GAAS,SAACZ,GAAK,OAAKA,EAAMiE,SAAS,IAAI,IANlCnD,EAAY,EAAnBd,MACSe,EAAmB,EAA5Bd,QACUe,EAAkB,EAA5Bd,SACoBe,EAAmB,EAAvCd,mBACkBe,EAAgB,EAAlCZ,iBACOa,EAAe,EAAtBZ,MAGF,EAOIK,GAAS,SAACZ,GAAK,OAAKA,EAAMa,OAAO0B,QAAU,CAAC,IANvCnB,EAAe,EAAtBpB,MACSqB,EAAsB,EAA/BpB,QACUqB,EAAqB,EAA/BpB,SACoBqB,EAAsB,EAA1CpB,mBACkBqB,EAAmB,EAArClB,iBACOmB,EAAkB,EAAzBlB,MAGF,EAOIK,GAAS,SAACZ,GAAK,MAAsB,KAAjBA,EAAMa,MAAa,IANlCqD,EAAY,EAAnBlE,MACSmE,EAAmB,EAA5BlE,QACUmE,EAAkB,EAA5BlE,SACoBmE,EAAmB,EAAvClE,mBACkBmE,EAAgB,EAAlChE,iBACOiE,EAAe,EAAtBhE,MAIEmB,GAAc,EAGhBkC,GACA7C,GACAM,GACA8C,IAEAzC,GAAc,GASdC,EADEE,aAAaC,QAAQ,WACdC,KAAKC,MAAMH,aAAaC,QAAQ,YAEhC,GAGX,IA2CM0C,EAAmBX,EAAoB1B,EAAkB,GACzDD,EAAoBlB,EAAqBmB,EAAkB,GAC3DC,EAAuBd,EAAwBa,EAAkB,GACjEsC,EAAoBL,EAAqBjC,EAAkB,GAEjE,OACE,UAAC,WAAc,YACb,SAAC,KAAM,CACLuC,KAAMlB,EACNmB,QAAS,iBACP,4HAAmE,KAGvE,iBAAMC,QAjBW,WACnBnB,GAAS,EACX,EAeiCpB,SAxDP,SAACjC,GAGzB,GAFAA,EAAMkC,iBAEDsB,EAAL,CAMA,GAFOjC,EAAOa,QAAO,SAACC,GAAC,OAAKA,EAAEC,QAAU5B,CAAY,IAE3CyB,OAAS,EAEhB,OADAsC,MAAM,oGACC,EAGTlD,EAAOmB,KAAK,CACVE,GAAI8B,KAAKC,SACTC,KAAMrB,EACNjB,MAAO5B,EACP6B,SAAUvB,EACV6D,MAAOf,IAGLvC,IACFE,aAAae,QAAQ,UAAWb,KAAKc,UAAUlB,IAC/CkD,MAAM,4DAGRb,IACA7C,IACAM,IACA8C,IACAb,GA1BA,CA2BF,EAwB6D,UACvD,iBAAKT,UAAWd,EAAe,WAC7B,qCACA,4BACE,kBACEe,YAAY,gBACZC,KAAK,OACLC,SAAUU,EACVT,OAAQU,EACR/D,MAAO2D,EACPV,UAAWuB,IAEZX,IACC,cAAGZ,UAAWd,EAAc,+EAKhC,4BACE,kBACEe,YAAY,YACZC,KAAK,OACLC,SAAUnC,EACVoC,OAAQnC,EACRlB,MAAOc,EACPmC,UAAWf,IAEZlB,IACC,cAAGiC,UAAWd,EAAc,gEAGhC,4BACE,kBACEe,YAAY,eACZC,KAAK,WACLC,SAAU7B,EACV8B,OAAQ7B,EACRxB,MAAOoB,EACP6B,UAAWb,IAEZd,IACC,cAAG2B,UAAWd,EAAc,iFAGhC,4BACE,kBACEe,YAAY,YACZC,KAAK,SACLC,SAAUiB,EACVhB,OAAQiB,EACRtE,MAAOkE,EACPjB,UAAWwB,IAEZL,IACC,cAAGnB,UAAWd,EAAc,0EAGhC,mBAAQmB,UAAW5B,EAAa6B,QA9ElB,WACpBE,GAAS,EACX,EA4E+D,sBAGvD,oCACQ,iBAAMF,QAASG,EAAa,6BAM9C,EChMA,EAAwB,qBAAxB,EAAsD,sBCqCtD,EA/Bc,WACZ,IAGIwB,EAHEC,GAASC,EAAAA,EAAAA,MAWf,OALEF,EADErD,aAAaC,QAAQ,UACbC,KAAKC,MAAMH,aAAaC,QAAQ,WAEhC,MAIV,gBAAKmB,UAAWd,EAAc,UAC5B,UAAC,KAAM,YACL,SAAC,KAAK,CAACkD,KAAK,gBAAe,UACzB,SAAC,EAAU,MAEZH,IACC,SAAC,KAAK,CAACG,KAAI,iBAAYF,EAAOnC,IAAK,UACjC,gBAAIC,UAAWd,EAAe,mBAAQ+C,EAAQ,GAAGF,KAAI,WAGzD,SAAC,KAAK,CAACK,KAAK,gBAAe,UACzB,SAAC,EAAU,UAKrB,ECxBA,EARkB,WAChB,OACE,SAAC,WAAc,WACb,SAAC,EAAK,KAGZ,C","sources":["webpack://rjs-asm03/./src/component/login/FormSigIn.module.css?0f50","hook/use-Login.js","component/login/FormSigIn.js","webpack://rjs-asm03/./src/component/login/FormSignUp.module.css?b85f","component/login/FormSignUp.js","webpack://rjs-asm03/./src/component/login/Login.module.css?dc0f","component/login/Login.js","page/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"signin\":\"FormSigIn_signin__-10CJ\",\"invalid\":\"FormSigIn_invalid__AcFil\",\"error\":\"FormSigIn_error__JcXZL\",\"hide\":\"FormSigIn_hide__g0vjl\"};","import { useState } from \"react\";\r\n\r\nconst useInput = (validataValue) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validataValue(enteredValue);\r\n  const hasError = !valueIsValid && isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    setEnteredValue(event.target.value);\r\n  };\r\n\r\n  const inputBlurHandler = () => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setEnteredValue(\"\");\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport classes from \"./FormSigIn.module.css\";\r\nimport useInput from \"../../hook/use-Login\";\r\n\r\nconst FormSignIn = () => {\r\n  const [fit, setFit] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const goSignUp = () => history.push(\"/login/signup\");\r\n  const goAccount = (event) => history.push(`/login/id=${event}`);\r\n\r\n  const {\r\n    value: enteredEmail,\r\n    isValid: enteredEmailIsValid,\r\n    hasError: emailInputHasError,\r\n    valueChangeHandler: emailChangedHandler,\r\n    inputBlurHandler: emailBlurHandler,\r\n    reset: resetEmailInput,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: enteredPassword,\r\n    isValid: enteredPasswordIsValid,\r\n    hasError: passwordInputHasError,\r\n    valueChangeHandler: passwordChangedHandler,\r\n    inputBlurHandler: passwordBlurHandler,\r\n    reset: resetPasswordInput,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  let formIsValid = false;\r\n\r\n  if (enteredEmailIsValid && enteredPasswordIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const scanNo = () => {\r\n    setFit(true);\r\n    resetPasswordInput();\r\n  };\r\n\r\n  const scanYes = () => {\r\n    setFit(false);\r\n    resetEmailInput();\r\n    resetPasswordInput();\r\n  };\r\n\r\n  //lấy dữ liệu tài khoản đăng ký\r\n  let useArr;\r\n  if (localStorage.getItem(\"userArr\")) {\r\n    useArr = JSON.parse(localStorage.getItem(\"userArr\"));\r\n  } else {\r\n    useArr = null;\r\n  }\r\n\r\n  // kiểm tra xem tài khoản đã được đăng ký chưa\r\n  let scan = null;\r\n\r\n  const formSignInHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!enteredEmailIsValid) {\r\n      return;\r\n    }\r\n\r\n    if (useArr.length > 0) {\r\n      scan = useArr.filter(\r\n        (x) => x.email === enteredEmail && x.password === enteredPassword\r\n      );\r\n    }\r\n\r\n    if (scan.length > 0) {\r\n      localStorage.setItem(\"Signin\", JSON.stringify(scan));\r\n    } else {\r\n      scanNo();\r\n    }\r\n\r\n    if (!emailInputHasError && !emailInputHasError && scan.length === 0) {\r\n      return scanNo();\r\n    } else {\r\n      scanYes();\r\n    }\r\n\r\n    goAccount(scan[0].id);\r\n  };\r\n\r\n  const emailInputClasses = emailInputHasError ? classes.invalid : \"\";\r\n  const passwordInputClasses = passwordInputHasError ? classes.invalid : \"\";\r\n\r\n  return (\r\n    <form onSubmit={formSignInHandler}>\r\n      <div className={classes.signin}>\r\n        <h1>Sign In</h1>\r\n        {fit && (\r\n          <p className={classes.error}>Tài khoản hoặc mật khẩu chính xác!</p>\r\n        )}\r\n        <div>\r\n          <input\r\n            placeholder=\"    Email\"\r\n            type=\"text\"\r\n            onChange={emailChangedHandler}\r\n            onBlur={emailBlurHandler}\r\n            value={enteredEmail}\r\n            className={emailInputClasses}\r\n          />\r\n          {emailInputHasError && (\r\n            <p className={classes.error}>Vui lòng nhập thông tin Email!</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <input\r\n            placeholder=\"    Password\"\r\n            type=\"password\"\r\n            onChange={passwordChangedHandler}\r\n            onBlur={passwordBlurHandler}\r\n            value={enteredPassword}\r\n            className={passwordInputClasses}\r\n          />\r\n          {passwordInputHasError && (\r\n            <p className={classes.error}>Vui lòng nhập thông tin mật khẩu!</p>\r\n          )}\r\n        </div>\r\n        <button disabled={!formIsValid}>SIGN IN</button>\r\n        <h4>\r\n          Create an account? <span onClick={goSignUp}>Sign up</span>\r\n        </h4>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FormSignIn;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"signup\":\"FormSignUp_signup__a-CXw\",\"invalid\":\"FormSignUp_invalid__cVlbh\",\"error\":\"FormSignUp_error__mXkS1\",\"hide\":\"FormSignUp_hide__sJkxt\"};","import { useHistory, Prompt } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport classes from \"./FormSignUp.module.css\";\r\nimport useInput from \"../../hook/use-Login\";\r\n\r\nconst FormSignUp = () => {\r\n  const [focus, setfocus] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const goFormSignIn = () => history.push(\"/login/signin\");\r\n  const {\r\n    value: enteredName,\r\n    isValid: enteredNameIsValid,\r\n    hasError: nameInputHasError,\r\n    valueChangeHandler: nameChangedHandler,\r\n    inputBlurHandler: nameBlurHandler,\r\n    reset: resetNameInput,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: enteredEmail,\r\n    isValid: enteredEmailIsValid,\r\n    hasError: emailInputHasError,\r\n    valueChangeHandler: emailChangedHandler,\r\n    inputBlurHandler: emailBlurHandler,\r\n    reset: resetEmailInput,\r\n  } = useInput((value) => value.includes(\"@\"));\r\n\r\n  const {\r\n    value: enteredPassword,\r\n    isValid: enteredPasswordIsValid,\r\n    hasError: passwordInputHasError,\r\n    valueChangeHandler: passwordChangedHandler,\r\n    inputBlurHandler: passwordBlurHandler,\r\n    reset: resetPasswordInput,\r\n  } = useInput((value) => value.trim().length >= 8);\r\n\r\n  const {\r\n    value: enteredPhone,\r\n    isValid: enteredPhoneIsValid,\r\n    hasError: phoneInputHasError,\r\n    valueChangeHandler: phoneChangedHandler,\r\n    inputBlurHandler: phoneBlurHandler,\r\n    reset: resetPhoneInput,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  // kiểm tra xem người dùng đã điền đầy đủ thông tin hay chưa\r\n  let formIsValid = false;\r\n\r\n  if (\r\n    enteredNameIsValid &&\r\n    enteredEmailIsValid &&\r\n    enteredPasswordIsValid &&\r\n    enteredPhoneIsValid\r\n  ) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  // kiểm tra xem email đã tồn tại hay chưa\r\n  let scan;\r\n\r\n  // thêm thông tin đăng ksy vào tài localstore\r\n  let useArr;\r\n  if (localStorage.getItem(\"userArr\")) {\r\n    useArr = JSON.parse(localStorage.getItem(\"userArr\"));\r\n  } else {\r\n    useArr = [];\r\n  }\r\n\r\n  const formSignUpHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!enteredNameIsValid) {\r\n      return;\r\n    }\r\n\r\n    scan = useArr.filter((x) => x.email === enteredEmail);\r\n\r\n    if (scan.length > 0) {\r\n      alert(\"Đăng ký thất bại,Email đã được tồn tại!\");\r\n      return false;\r\n    }\r\n\r\n    useArr.push({\r\n      id: Math.random(),\r\n      name: enteredName,\r\n      email: enteredEmail,\r\n      password: enteredPassword,\r\n      phone: enteredPhone,\r\n    });\r\n\r\n    if (useArr) {\r\n      localStorage.setItem(\"userArr\", JSON.stringify(useArr));\r\n      alert(\"Đăng ký tài khoản thành công\");\r\n    }\r\n\r\n    resetNameInput();\r\n    resetEmailInput();\r\n    resetPasswordInput();\r\n    resetPhoneInput();\r\n    goFormSignIn();\r\n  };\r\n\r\n  // sử lý sự cố nếu người dùng không may re-loading lại trang khi đang nhập thông tin đăng ký\r\n  const SubmitHandler = () => {\r\n    setfocus(false);\r\n  };\r\n\r\n  const focusHandler = () => {\r\n    setfocus(true);\r\n  };\r\n\r\n  const nameInputClasses = nameInputHasError ? classes.invalid : \"\";\r\n  const emailInputClasses = emailInputHasError ? classes.invalid : \"\";\r\n  const passwordInputClasses = passwordInputHasError ? classes.invalid : \"\";\r\n  const phoneInputClasses = phoneInputHasError ? classes.invalid : \"\";\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Prompt\r\n        when={focus}\r\n        message={() =>\r\n          \"Bạn có chắc là muốn chuyến hướng khi chưa đăng ký xong thông tin?\"\r\n        }\r\n      />\r\n      <form onFocus={focusHandler} onSubmit={formSignUpHandler}>\r\n        <div className={classes.signup}>\r\n          <h1>Sign Up</h1>\r\n          <div>\r\n            <input\r\n              placeholder=\"    Full Name\"\r\n              type=\"text\"\r\n              onChange={nameChangedHandler}\r\n              onBlur={nameBlurHandler}\r\n              value={enteredName}\r\n              className={nameInputClasses}\r\n            />\r\n            {nameInputHasError && (\r\n              <p className={classes.error}>\r\n                Vui lòng điền thông tin họ và tên!\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <input\r\n              placeholder=\"    Email\"\r\n              type=\"text\"\r\n              onChange={emailChangedHandler}\r\n              onBlur={emailBlurHandler}\r\n              value={enteredEmail}\r\n              className={emailInputClasses}\r\n            />\r\n            {emailInputHasError && (\r\n              <p className={classes.error}>Vui lòng điền thông tin Email!</p>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <input\r\n              placeholder=\"    Password\"\r\n              type=\"password\"\r\n              onChange={passwordChangedHandler}\r\n              onBlur={passwordBlurHandler}\r\n              value={enteredPassword}\r\n              className={passwordInputClasses}\r\n            />\r\n            {passwordInputHasError && (\r\n              <p className={classes.error}>Mật khẩu có ít nhất là 8 ký tự!</p>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <input\r\n              placeholder=\"    Phone\"\r\n              type=\"number\"\r\n              onChange={phoneChangedHandler}\r\n              onBlur={phoneBlurHandler}\r\n              value={enteredPhone}\r\n              className={phoneInputClasses}\r\n            />\r\n            {phoneInputHasError && (\r\n              <p className={classes.error}>Vui lòng nhập số điện thoại!</p>\r\n            )}\r\n          </div>\r\n          <button disabled={!formIsValid} onClick={SubmitHandler}>\r\n            SIGN UP\r\n          </button>\r\n          <h4>\r\n            Login?<span onClick={goFormSignIn}>Click</span>\r\n          </h4>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FormSignUp;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"login\":\"Login_login__gbX2H\",\"login1\":\"Login_login1__LleMq\"};","import React from \"react\";\r\nimport { Switch, Route, useParams } from \"react-router-dom\";\r\n\r\nimport FormSignIn from \"./FormSigIn\";\r\nimport FormSignUp from \"./FormSignUp\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nconst Login = () => {\r\n  const parmas = useParams();\r\n\r\n  // lấy dữ data từ localstore về\r\n  let userArr;\r\n\r\n  if (localStorage.getItem(\"Signin\")) {\r\n    userArr = JSON.parse(localStorage.getItem(\"Signin\"));\r\n  } else {\r\n    userArr = null;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.login}>\r\n      <Switch>\r\n        <Route path=\"/login/signin\">\r\n          <FormSignIn />\r\n        </Route>\r\n        {userArr && (\r\n          <Route path={`/login/${parmas.id}`}>\r\n            <h1 className={classes.login1}>Hello {userArr[0].name} !</h1>\r\n          </Route>\r\n        )}\r\n        <Route path=\"/login/signup\">\r\n          <FormSignUp />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nimport Login from \"../component/login/Login\";\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Login />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["validataValue","useState","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","value","isValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","fit","setFit","history","useHistory","useInput","trim","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangedHandler","emailBlurHandler","resetEmailInput","enteredPassword","enteredPasswordIsValid","passwordInputHasError","passwordChangedHandler","passwordBlurHandler","resetPasswordInput","formIsValid","useArr","scanNo","localStorage","getItem","JSON","parse","scan","emailInputClasses","classes","passwordInputClasses","onSubmit","preventDefault","length","filter","x","email","password","setItem","stringify","push","goAccount","id","className","placeholder","type","onChange","onBlur","disabled","onClick","focus","setfocus","goFormSignIn","enteredName","enteredNameIsValid","nameInputHasError","nameChangedHandler","nameBlurHandler","resetNameInput","includes","enteredPhone","enteredPhoneIsValid","phoneInputHasError","phoneChangedHandler","phoneBlurHandler","resetPhoneInput","nameInputClasses","phoneInputClasses","when","message","onFocus","alert","Math","random","name","phone","userArr","parmas","useParams","path"],"sourceRoot":""}